{"version":3,"sources":["components/Tabs/DatabaseComponent.tsx"],"names":["Details","lazily","DatabaseComponent","props","tableRef","columns","filter","d","show","className","onFilterChange","data","length","resetData","initializeResetData","console","log","setTimeLineData","timelineData","setTableData","tableData","setMapData","mapData","setWordCloudData","wordcloudData","finalData","current","state","map","id","letter","lat","lon","summary","sender","receiver","origin","impor","source","dateSent","dateReceived","result","Object","values","reduce","r","e","key","z","timeline","split","y","name","wordcloud","text","value","tableDataFiltered","options","filtering","detailPanel","style","padding","fallback","connect","abolitionData"],"mappings":"wIAAA,8HAMOA,EAAWC,aAAO,kBAAI,iCAAtBD,QAEE,SAASE,EAAkBC,GAClC,IAAMC,EAAWD,EAAMC,SAEnBC,EAAUF,EAAME,QAoEpB,OAHAA,EAAUF,EAAME,QAAQC,QAAO,SAACC,GAC9B,OAAOA,EAAEC,QAGT,qBAAKC,UAAU,qBAAf,SACE,cAAC,IAAD,CACEL,SAAUD,EAAMC,SAChBM,eAAgB,SAACC,IAvEG,SAACA,GACzB,GAAoB,IAAhBA,EAAKC,OAAc,CACrB,IAAMC,EAAYC,cAClBC,QAAQC,IAAIH,GACZV,EAAMc,gBAAgB,CAAEC,aAAcL,EAAUK,eAChDf,EAAMgB,aAAa,CAAEC,UAAWP,EAAUO,YAC1CjB,EAAMkB,WAAW,CAAEC,QAAST,EAAUS,UACtCnB,EAAMoB,iBAAiB,CAACC,cAAeX,EAAUW,gBACjDT,QAAQC,IAAI,eACP,CACL,IAAMS,EAAYrB,EAASsB,QAAQC,MAAMhB,KAAKiB,KAAI,SAACrB,GAAD,MAAa,CAC7DsB,GAAItB,EAAEsB,GACNC,OAAQvB,EAAEuB,OACVC,IAAKxB,EAAEwB,IACPC,IAAKzB,EAAEyB,IACPC,QAAS1B,EAAE0B,QACXC,OAAQ3B,EAAE2B,OACVC,SAAU5B,EAAE4B,SACZC,OAAQ7B,EAAE6B,OACVC,MAAO9B,EAAE8B,MACTC,OAAQ/B,EAAE+B,OACVC,SAAUhC,EAAEgC,SACZC,aAAcjC,EAAEiC,iBAEZC,EAASC,OAAOC,OACpBlB,EAAUmB,QAAO,SAAUC,EAAQC,GACjC,IAAIC,EAAMD,EAAET,MAOZ,OANKQ,EAAEE,GAILF,EAAEE,GAAKC,GAAK,GAHZH,EAAEE,GAAOD,EACTD,EAAEE,GAAKC,EAAI,GAINH,IACN,KAICI,EAAWP,OAAOC,OACtBlB,EAAUmB,QAAO,SAAUC,EAAQC,GAAS,IAAD,EACnCI,EAAK,OAAGJ,QAAH,IAAGA,GAAH,UAAGA,EAAGP,gBAAN,aAAG,EAAaW,MAAM,KACjC,GAAIA,EAAMtC,OAAS,EAAG,CACpB,IAAImC,EAAMG,EAAM,GAOhB,OANKL,EAAEE,GAILF,EAAEE,GAAKI,GAAK,GAHZN,EAAEE,GAAO,CAAEK,KAAMF,EAAM,IACvBL,EAAEE,GAAKI,EAAI,GAINN,EACF,MAAO,KACb,KAGCQ,EAAYjD,EAASsB,QAAQC,MAAMhB,KAAKiB,KAAI,SAACrB,GAAD,MAAa,CAC7D+C,KAAM/C,EAAE0B,QACRsB,MAAOhD,EAAEuB,WAEX3B,EAAMc,gBAAgB,CAAEC,aAAc+B,IACtC9C,EAAMgB,aAAa,CAAEC,UAAWK,IAChCtB,EAAMkB,WAAW,CAAEC,QAASmB,IAC5BtC,EAAMoB,iBAAiB,CAACC,cAAe6B,KAWnCG,CAAkB7C,IAEpBN,QAASA,EACTM,KAAMR,EAAMiB,UACZqC,QAAS,CACPC,WAAW,GAEbC,YAAa,SAAChD,GACZ,OACE,qBAAKiD,MAAO,CAAEC,QAAS,QAAvB,SACC,eAAC,WAAD,CAAUC,SACR,0CADF,cAEG,cAAC9D,EAAD,CAASW,KAAMA,cAchBoD,uBANc,SAACpC,GAC5B,MAAO,CACLP,UAAWO,EAAMqC,cAAc5C,UAC/Bf,QAASsB,EAAMqC,cAAc3D,WAGO,CACtCgB,eACAF,iBACAF,oBACAM,sBAJawC,CAKZ7D","file":"static/js/7.b6f10bae.chunk.js","sourcesContent":["import MaterialTable from \"material-table\";\r\nimport React, {Suspense} from \"react\";\r\nimport {lazily} from 'react-lazily'\r\nimport { connect } from \"react-redux\";\r\nimport { setMapData, setTableData, setTimeLineData, setWordCloudData } from \"../../redux/actions\";\r\nimport { initializeResetData } from \"../../redux/reducers/abolitionData\";\r\nconst {Details} = lazily(()=>import('./Details'))\r\n/*import {Details} from \"./Details\";\r\n*/export function DatabaseComponent(props: any) {\r\n  const tableRef = props.tableRef;\r\n\r\n  let columns = props.columns;\r\n  const tableDataFiltered = (data: any) => {\r\n    if (data.length === 0) {\r\n      const resetData = initializeResetData();\r\n      console.log(resetData);\r\n      props.setTimeLineData({ timelineData: resetData.timelineData });\r\n      props.setTableData({ tableData: resetData.tableData });\r\n      props.setMapData({ mapData: resetData.mapData });\r\n      props.setWordCloudData({wordcloudData: resetData.wordcloudData});\r\n      console.log(\"cleared\");\r\n    } else {\r\n      const finalData = tableRef.current.state.data.map((d: any) => ({\r\n        id: d.id,\r\n        letter: d.letter,\r\n        lat: d.lat,\r\n        lon: d.lon,\r\n        summary: d.summary,\r\n        sender: d.sender,\r\n        receiver: d.receiver,\r\n        origin: d.origin,\r\n        impor: d.impor,\r\n        source: d.source,\r\n        dateSent: d.dateSent,\r\n        dateReceived: d.dateReceived,\r\n      }));\r\n      const result = Object.values(\r\n        finalData.reduce(function (r: any, e: any) {\r\n          var key = e.impor;\r\n          if (!r[key]) {\r\n            r[key] = e;\r\n            r[key].z = 1;\r\n          } else {\r\n            r[key].z += 1;\r\n          }\r\n          return r;\r\n        }, {})\r\n      );\r\n      // const [mapData] = useState<any>(result);\r\n\r\n      const timeline = Object.values(\r\n        finalData.reduce(function (r: any, e: any) {\r\n          const split = e?.dateSent?.split(\"-\");\r\n          if (split.length > 0) {\r\n            var key = split[0];\r\n            if (!r[key]) {\r\n              r[key] = { name: split[0] };\r\n              r[key].y = 1;\r\n            } else {\r\n              r[key].y += 1;\r\n            }\r\n            return r;\r\n          } else return {};\r\n        }, {})\r\n      );\r\n\r\n      const wordcloud = tableRef.current.state.data.map((d: any) => ({\r\n        text: d.summary,\r\n        value: d.letter,\r\n      }));\r\n      props.setTimeLineData({ timelineData: timeline });\r\n      props.setTableData({ tableData: finalData });\r\n      props.setMapData({ mapData: result });\r\n      props.setWordCloudData({wordcloudData: wordcloud});\r\n    }\r\n  };\r\n  columns = props.columns.filter((d: any) => {\r\n    return d.show;\r\n  });\r\n  return (\r\n    <div className=\"database-component\">\r\n      <MaterialTable\r\n        tableRef={props.tableRef}\r\n        onFilterChange={(data: any) => {\r\n          tableDataFiltered(data);\r\n        }}\r\n        columns={columns}\r\n        data={props.tableData}\r\n        options={{\r\n          filtering: true,\r\n        }}\r\n        detailPanel={(data: any) => {\r\n          return (\r\n            <div style={{ padding: \"10px\" }}>\r\n             <Suspense fallback={\r\n               <div>loading</div>\r\n             }> <Details data={data}/>\r\n             </Suspense></div>\r\n          );\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps: any = (state: any) => {\r\n  return {\r\n    tableData: state.abolitionData.tableData,\r\n    columns: state.abolitionData.columns,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  setMapData,\r\n  setTableData,\r\n  setTimeLineData,\r\n  setWordCloudData,\r\n})(DatabaseComponent);\r\n"],"sourceRoot":""}